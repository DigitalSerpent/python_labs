import re
from collections import Counter

def normalize(text: str, *, casefold: bool = True, yooo: bool = True) -> str:
    """
    –Ω–æ—Ä–º–∞–ª–∏–∑–∏—Ä—É—é —Ç–µ–∫—Å—Ç(—á–∏—â—É)
    """
    if casefold:
        text = text.casefold()
    if yooo:
        text = text.replace('—ë', '–µ').replace('–Å', '–ï')
    probely = {'\t', '\r', '\n'}
    for char in probely:
        text = text.replace(char, ' ')
    text = re.sub(r'\s+', ' ', text).strip()
    
    return text

def tokenize(text: str) -> list[str]:
    """
    –¢–æ–∫–µ–Ω–∏–∑–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ 
    """
    pattern = r'\w+(?:-\w+)*'
    tokens = re.findall(pattern, text)
    
    return tokens

def count_freq(tokens: list[str]) -> dict[str, int]:
    """
    —Å—á–∏—Ç–∞—é —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —Å–ª–æ–≤–æ
    """
    return dict(Counter(tokens))

def top_n(freq: dict[str, int], n: int = 5) -> list[tuple[str, int]]:
    """
    —á–∞—Å—Ç—ã–µ —Å–ª–æ–≤–∞
    """
    sorted_items = sorted(freq.items(), key=lambda x: (-x[1], x[0]))
    
    return sorted_items[:n]

print("normalize:")
print(normalize("–ü—Ä–ò–≤–ï—Ç\n–ú–ò—Ä\t")) 
print(normalize("—ë–∂–∏–∫, –Å–ª–∫–∞")) 
print(normalize("Hello\r\nWorld")) 
print(normalize("  –¥–≤–æ–π–Ω—ã–µ   –ø—Ä–æ–±–µ–ª—ã  "))

print("tokenize:")
print(tokenize("–ø—Ä–∏–≤–µ—Ç –º–∏—Ä")) 
print(tokenize("hello,world!!!"))  
print(tokenize("–ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É –∫—Ä—É—Ç–æ"))  
print(tokenize("2025 –≥–æ–¥")) 
print(tokenize("emoji üòÄ –Ω–µ —Å–ª–æ–≤–æ"))

print("count_freq:")
tokens1 = ["a", "b", "a", "c", "b", "a"]
freq1 = count_freq(tokens1)
print(freq1) 

print("top_n:")
print(top_n(freq1, 2))  

tokens2 = ["bb", "aa", "bb", "aa", "cc"]
freq2 = count_freq(tokens2)
print(freq2)  
print(top_n(freq2, 2))